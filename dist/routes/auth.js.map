{"version":3,"sources":["routes/auth.js","routes/auth.ts"],"names":["exports","__esModule","Router","require","passport","auth","router","prefix","get","ctx","authenticate","err","user","body","login"],"mappings":"AAAA;;AACAA,OAAO,CAACC,UAAR,GAAqB,IAArB;;ACDA,IAAAC,MAAA,GAAAC,OAAA,CAAA,aAAA,CAAA;;AACA,IAAAC,QAAA,GAAAD,OAAA,CAAA,cAAA,CAAA,C,CAEA;AACA;;;AAEA,IAAME,IAAI,GAAGF,OAAO,CAAC,qBAAD,CAApB;;AAEA,IAAMG,MAAM,GAAG,IAAIJ,MAAJ,CAAW;AAACK,EAAAA,MAAM,EAAE;AAAT,CAAX,CAAf;AAEAD,MAAM,CACDE,GADL,CACS,QADT,EACmB,UAAAC,GAAA,EAAG;AAAI,SAAAL,QAAQ,CAACM,YAAT,CAAsB,OAAtB,EAA+B,UAACC,GAAD,EAAMC,IAAN,EAAU;AAC3D,QAAG,CAACA,IAAJ,EAAU;AACNH,MAAAA,GAAG,CAAC,OAAD,CAAH,CAAU,GAAV,EAAeE,GAAf;AACH,KAFD,MAEO;AACHF,MAAAA,GAAG,CAACI,IAAJ,GAAWD,IAAX;AACA,aAAOH,GAAG,CAACK,KAAJ,CAAUF,IAAV,CAAP;AACH;AACJ,GAPqB,EAOnBH,GAPmB,CAAA;AAOf,CARX;AAUI;AACA;AACA;AACA;AACA;AACA;;AAEJT,OAAA,CAAA,SAAA,CAAA,GAAeM,MAAf","file":"auth.js","sourcesContent":["\"use strict\";\nexports.__esModule = true;\nvar Router = require(\"@koa/router\");\nvar passport = require(\"koa-passport\");\n// need to initialize the local auth strategy\n// in controllers/auth.ts\nvar auth = require('../controllers/auth');\nvar router = new Router({ prefix: '/auth' });\nrouter\n    .get('/login', function (ctx) { return passport.authenticate('local', function (err, user) {\n    if (!user) {\n        ctx[\"throw\"](401, err);\n    }\n    else {\n        ctx.body = user;\n        return ctx.login(user);\n    }\n})(ctx); });\n/* Handle Oauth Login */\n//.get('/google', passport.authenticate('google'))\n//.get('/google/callback', passport.authenticate('google', {\n//    successRedirect: '/google/success/',\n//    failureRedirect: '/'\n//}))\nexports[\"default\"] = router;\n","import * as Router from '@koa/router'\nimport * as passport from 'koa-passport'\n\n// need to initialize the local auth strategy\n// in controllers/auth.ts\n\nconst auth = require('../controllers/auth')\n\nconst router = new Router({prefix: '/auth'})\n\nrouter\n    .get('/login', ctx => passport.authenticate('local', (err, user) => {\n        if(!user) {\n            ctx.throw(401, err)\n        } else {\n            ctx.body = user\n            return ctx.login(user)\n        }\n    })(ctx))\n\n    /* Handle Oauth Login */\n    //.get('/google', passport.authenticate('google'))\n    //.get('/google/callback', passport.authenticate('google', {\n    //    successRedirect: '/google/success/',\n    //    failureRedirect: '/'\n    //}))\n\nexport default router"]}